<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nguyễn Quang Trãi</title>
    <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/</link>
    <description>Recent content in Posts on Nguyễn Quang Trãi</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>sample@gmail.com (Bino Kochumol Varghese)</managingEditor>
    <webMaster>sample@gmail.com (Bino Kochumol Varghese)</webMaster>
    <lastBuildDate>Mon, 30 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Biến và Kiểu Dữ Liệu Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet3/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet3/</guid>
      <description>&lt;h2 id=&#34;biến-và-kiểu-dữ-liệu-trong-java&#34;&gt;Biến và Kiểu Dữ Liệu Trong Java&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-biến-trong-java&#34;&gt;&lt;strong&gt;1. Biến Trong Java&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Biến&lt;/strong&gt; là một tên đại diện cho một vùng nhớ để lưu trữ dữ liệu. Trong Java, biến phải được khai báo với một kiểu dữ liệu cụ thể, xác định loại giá trị mà biến đó có thể lưu trữ.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Các Loại Vòng Lặp Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet4/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet4/</guid>
      <description>&lt;h2 id=&#34;các-loại-vòng-lặp-trong-java&#34;&gt;Các Loại Vòng Lặp Trong Java&lt;/h2&gt;&#xA;&lt;p&gt;Trong lập trình Java, vòng lặp được sử dụng để thực hiện một đoạn mã nhiều lần cho đến khi một điều kiện nhất định được đáp ứng. Java cung cấp ba loại vòng lặp cơ bản:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cấu Trúc Cơ Bản Của Một Chương Trình Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet2/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet2/</guid>
      <description>&lt;h2 id=&#34;cấu-trúc-cơ-bản-của-một-chương-trình-java&#34;&gt;Cấu Trúc Cơ Bản Của Một Chương Trình Java&lt;/h2&gt;&#xA;&lt;p&gt;Chương trình Java cơ bản bắt đầu từ phương thức chính &lt;code&gt;main()&lt;/code&gt;. Đây là điểm khởi đầu mà JVM (Java Virtual Machine) sử dụng để thực thi chương trình. Mỗi chương trình Java phải có ít nhất một lớp, và lớp đó sẽ chứa phương thức &lt;code&gt;main()&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Điều Kiện Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet5/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet5/</guid>
      <description>&lt;h2 id=&#34;điều-kiện-trong-java&#34;&gt;Điều Kiện Trong Java&lt;/h2&gt;&#xA;&lt;p&gt;Trong Java, các câu lệnh điều kiện được sử dụng để quyết định thực thi một đoạn mã dựa trên kết quả của một điều kiện logic. Các loại câu lệnh điều kiện chính trong Java bao gồm:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Giới Thiệu Ngôn Ngữ Lập Trình Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet1/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet1/</guid>
      <description>&lt;h2 id=&#34;giới-thiệu-về-java&#34;&gt;Giới Thiệu Về Java&lt;/h2&gt;&#xA;&lt;p&gt;Java là một ngôn ngữ lập trình mạnh mẽ và được sử dụng rộng rãi trên toàn cầu. Được phát triển bởi Sun Microsystems (nay là Oracle), Java được sử dụng trong nhiều lĩnh vực, từ ứng dụng di động đến phần mềm doanh nghiệp.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kế Thừa Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet8/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet8/</guid>
      <description>&lt;h2 id=&#34;kế-thừa-trong-java&#34;&gt;Kế Thừa Trong Java&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Kế thừa&lt;/strong&gt; là một trong những tính năng cốt lõi của lập trình hướng đối tượng (OOP), cho phép một lớp kế thừa các thuộc tính và phương thức từ một lớp khác. Điều này giúp giảm thiểu việc viết lại mã và tăng khả năng tái sử dụng.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lớp và Đối Tượng Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet7/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet7/</guid>
      <description>&lt;h2 id=&#34;lớp-và-đối-tượng-trong-java&#34;&gt;Lớp và Đối Tượng Trong Java&lt;/h2&gt;&#xA;&lt;p&gt;Java là ngôn ngữ lập trình hướng đối tượng (OOP), trong đó mọi thứ đều xoay quanh &lt;strong&gt;lớp&lt;/strong&gt; và &lt;strong&gt;đối tượng&lt;/strong&gt;. Đây là hai khái niệm cơ bản và quan trọng nhất trong Java.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phương Thức Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet6/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet6/</guid>
      <description>&lt;h2 id=&#34;phương-thức-trong-java&#34;&gt;Phương Thức Trong Java&lt;/h2&gt;&#xA;&lt;p&gt;Phương thức trong Java là các khối mã được định nghĩa để thực hiện một chức năng cụ thể. Chúng giúp tổ chức mã nguồn tốt hơn, tái sử dụng, và giảm sự lặp lại. Một phương thức có thể nhận tham số và có thể trả về giá trị.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Xử Lý Ngoại Lệ Trong Java</title>
      <link>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet9/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author>sample@gmail.com (Bino Kochumol Varghese)</author>
      <guid>https://nguyenquangtrai.github.io/nguyenquangtrai03.github.io/post/2024/baiviet9/</guid>
      <description>&lt;h2 id=&#34;xử-lý-ngoại-lệ-trong-java&#34;&gt;Xử Lý Ngoại Lệ Trong Java&lt;/h2&gt;&#xA;&lt;p&gt;Ngoại lệ (Exception) là các tình huống lỗi xảy ra trong quá trình thực thi chương trình. Java cung cấp cơ chế xử lý ngoại lệ để kiểm soát các lỗi và ngăn chặn ứng dụng bị dừng đột ngột.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
